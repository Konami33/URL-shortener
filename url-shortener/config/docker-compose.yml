version: '3.8'

services:
  redis:
    image: redis/redis-stack:latest
    container_name: url_shortener_redis
    command: redis-server --requirepass your_redis_password
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis-data:/data
    restart: unless-stopped

  postgres:
    container_name: url_shortener_postgres
    image: postgres:16-alpine
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init.sh
      - ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    environment:
      POSTGRES_USER: your_pg_user
      POSTGRES_PASSWORD: your_pg_password
      POSTGRES_DB: url_shortener
      PGDATA: /var/lib/postgresql/data/pgdata  # Critical for Alpine compatibility
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U your_pg_user -d url_shortener']
      interval: 5s
      timeout: 5s
      retries: 10

  pgbouncer:
    container_name: url_shortener_pgbouncer
    image: edoburu/pgbouncer
    environment:
      DB_USER: your_pg_user
      DB_PASSWORD: your_pg_password
      DB_HOST: postgres
      DB_NAME: url_shortener
      LISTEN_PORT: 6432
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 100
      DEFAULT_POOL_SIZE: 20
      ADMIN_USERS: your_pg_user
      AUTH_TYPE: md5
      IGNORE_STARTUP_PARAMETERS: extra_float_digits
    volumes:
      - ./userlist.txt:/etc/pgbouncer/userlist.txt
    ports:
      - "6432:6432"  # Standard PgBouncer port
    depends_on:
      postgres:
        condition: service_healthy


  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    ports:
      - "4317:4317"
      - "55681:55681"
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    command:
      --config etc/otel-collector-config.yml
    depends_on:
      - tempo

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "3100:3100"
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    command:
      -config.file=/etc/tempo.yaml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - tempo

volumes:
  redis-data:
  pg_data:

networks:
  url-shortener-net:
    driver: bridge